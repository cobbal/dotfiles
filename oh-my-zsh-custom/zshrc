ZSH=$HOME/.oh-my-zsh
ZSH_CUSTOM=$HOME/.config/dotfiles/oh-my-zsh-custom
ZSH_THEME="cobbal"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git brew brew-cask osx android nix)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...

# source ~/.launchd.conf.sh export

test -f /usr/local/share/zsh/site-functions/_aws && source /usr/local/share/zsh/site-functions/_aws

alias o.='open .'
alias o,='open .' # common typo...
alias csi='rlwrap csi'
alias guile='rlwrap guile'
alias ccl64='rlwrap ccl64'
alias ccl='rlwrap ccl'
alias lps='ps -Af | grep -i'
alias bfd='openssl bf -d -a <'
alias ctop='top -o cpu'
alias emacs='emacs -nw'
alias ping='ping -c 100'
alias iup='ping gdns'
alias clj='rlwrap clj'
alias clojure='rlwrap clojure'
alias ttty='tee /dev/tty'
alias igdb='fsf-gdbtui'
alias sl='ls'
alias kasse='killall ScreenSaverEngine'
alias appcode='open -a appcode'
alias skim='open -a ~/Applications/Skim.app'
alias escape='sed -e "s/'\''/'\''\\\\'\'''\''/g; 1s/^/'\''/; \$s/\$/'\''/"'
alias pwcopy='pwd | escape | pbcopy'

if [[ "$(uname)" == "Linux" ]]; then
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
fi

function lwhich {
    which $1 | xargs ls -l
}

function bfe {
    if [ -e $1 ]; then
        echo "File exists, cowardly refusing to overwrite"
    else
        read -s "pass?Enter new password: "
        echo
        echo $pass | openssl bf -a > $1
        pass=''
    fi
}

if which pyenv > /dev/null; then
    eval "$(pyenv init -)"
fi

# if [ -e "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]; then
#     source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
# fi # added by Nix installer

if [[ "$TERM" == "dumb" ]]; then
    unsetopt zle
    unsetopt prompt_cr
    unsetopt prompt_subst
    unfunction precmd
    unfunction preexec
    PS1='$ '
fi

test -e ${HOME}/.iterm2_shell_integration.zsh && source ${HOME}/.iterm2_shell_integration.zsh \
|| echo $'iterm2 intergration not present. to install:\n  curl -L https://iterm2.com/misc/install_shell_integration.sh | bash'
